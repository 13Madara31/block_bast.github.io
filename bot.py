import telebot
import logging
import time
import os
from gtts import gTTS
import tempfile
import random
from datetime import datetime, timedelta
from telebot.types import ReplyKeyboardMarkup, KeyboardButton
from flask import Flask, request, jsonify
from flask_cors import CORS # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º CORS
import threading

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s',
    datefmt='%Y-%m-%d %H:%M:%S'
)

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞
bot = telebot.TeleBot(os.environ.get('TELEGRAM_BOT_TOKEN'))

app = Flask(__name__) # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
CORS(app) # –í–∫–ª—é—á–∞–µ–º CORS –¥–ª—è –≤—Å–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è Flask

# –°–ø–∏—Å–∫–∏
ADMINS = [1192684448, 1455941147, 6824082367, 1647977664]
PROTECTED_USER = "@Madara1332"

# –ù–û–í–´–ô –°–ü–ò–°–û–ö –ò–ó–í–ï–°–¢–ù–´–• –Æ–ó–ï–†–ù–ï–ô–ú–û–í, –∫–æ—Ç–æ—Ä—ã–µ –±–æ—Ç –±—É–¥–µ—Ç –ø—ã—Ç–∞—Ç—å—Å—è —É–ø–æ–º—è–Ω—É—Ç—å
KNOWN_USERNAMES = [
    "@Madara1332", "@icemxn", "@ivanNN4ik", "@polyashenka",
    "@kanapeas", "@Hg2355644", "@Fun_Dan3", "@Krasavchikkkkkkkkkkkkkk",
    "@sundrseil59", "@nestea_rem", "@Grut_as", "@GerBEE4", "@DevilHeaven0",
    "@xenophonsshiva", "@Lolil_Angi", "@marriavoronina", "@luniluda", "@austinec1",
    "@DAWKAODAWKA", "@Curse9123", "@anuytaaaa", "@krasavchikkkkkkkkk", "@Popluektov",
    "@Barbs228", "@holejes", "@Zxcvbnm_111222", "@referalyan",
    "@superiorplazer", "@ame_libre_de_lartiste", "@tmlk_07", "@tfgkghn","@sseeevgii",
    "@Aleks_Chik","@AbaddonTaken","@Fort_KH","@mashhkb","@nikita_ket","@Blabyda16547","@Prostoktotto","@Chert1la1"
]

ANNOUNCEMENT_CHAT_ID = ADMINS[0] # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–µ—Ä–≤–æ–º—É –∞–¥–º–∏–Ω—É. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ ID –Ω—É–∂–Ω–æ–≥–æ —á–∞—Ç–∞/–∫–∞–Ω–∞–ª–∞!

# –ù–ê–°–¢–†–û–ô–ö–ê –°–ò–°–¢–ï–ú–´ –ê–ù–¢–ò-–ú–ê–¢–ê (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –í–´–ö–õ–Æ–ß–ï–ù–ê)
ANTI_MAT_ENABLED = False

BAD_WORDS = [
    '–±–ª—è', '–±–ª—è—Ç—å', '–ø–∏–∑–¥–∞', '–ø–∏–∑–¥–µ—Ü', '—Ö—É–π', '—Ö—É—ë', '–µ–±–∞—Ç—å', '–µ–±–∞–ª', '–µ–±–∞–Ω',
    '–Ω–∞—Ö', '–Ω–∞—Ö—É–π', '—Å—É–∫–∞', '–±–ª—è–¥—å', '–≥–∞–Ω–¥–æ–Ω', '–º—É–¥–∞–∫', '–¥–æ–ª–±–∞—ë–±', '–∑–∞–ª—É–ø–∞'
]

ULTIMATUM_TASKS = [
    "–ù–∞–ø–∏—à–∏ 10 —Ä–∞–∑ '–Ø –±–æ–ª—å—à–µ –Ω–µ –±—É–¥—É –º–∞—Ç–µ—Ä–∏—Ç—å—Å—è'",
    "–°–¥–µ–ª–∞–π 20 –ø—Ä–∏—Å–µ–¥–∞–Ω–∏–π",
    "–°–ø–æ–π –ø–µ—Å–Ω—é –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏", 
    "–ù–∞–ø–∏—à–∏ —Å—Ç–∏—Ö –ø—Ä–æ —Ö–æ—Ä–æ—à–µ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ",
    "–°–¥–µ–ª–∞–π 15 –æ—Ç–∂–∏–º–∞–Ω–∏–π",
    "–ü—Ä–∏–¥—É–º–∞–π –∏ —Ä–∞—Å—Å–∫–∞–∂–∏ —à—É—Ç–∫—É",
    "–ù–∞–ø–∏—à–∏ —Ä–∞—Å—Å–∫–∞–∑ –Ω–∞ 100 —Å–ª–æ–≤ –æ –≤–µ–∂–ª–∏–≤–æ—Å—Ç–∏",
    "–°–¥–µ–ª–∞–π 10 –ø–æ–∫–ª–æ–Ω–æ–≤ —Å –∏–∑–≤–∏–Ω–µ–Ω–∏—è–º–∏",
    "–°–ø–æ–π –≥–∏–º–Ω –≤–µ–∂–ª–∏–≤–æ—Å—Ç–∏"
]

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
USER_VIOLATIONS = {}
USER_TIMEOUTS = {}

# –ü–£–¢–ò –ö –í–ê–®–ò–ú –ê–£–î–ò–û–§–ê–ô–õ–ê–ú - –ù–ê–°–¢–†–û–ô–¢–ï –≠–¢–ò –ü–£–¢–ò!
AUDIO_FILES = {
    'puck': 'farts-46.mp3',      # –ê—É–¥–∏–æ –¥–ª—è –æ–±—ã—á–Ω–æ–≥–æ –ø—É–∫–∞
    'puck2': 'long-fart.mp3',     # –ê—É–¥–∏–æ –¥–ª—è —É—Å–∏–ª–µ–Ω–Ω–æ–≥–æ –ø—É–∫–∞
    'puck3': 'farts-36.mp3',     # –ê—É–¥–∏–æ –¥–ª—è —ç–ø–∏—á–µ—Å–∫–æ–≥–æ –ø—É–∫–∞
    'protection': '–Ω–µ—Ç.mp4'   # –í–∏–¥–µ–æ –¥–ª—è –∑–∞—â–∏—Ç—ã
}

def is_admin(user_id):
    return user_id in ADMINS

def is_user_in_timeout(user_id):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Ç–∞–π–º–∞—É—Ç–µ"""
    if user_id in USER_TIMEOUTS:
        timeout_end = USER_TIMEOUTS[user_id]
        if datetime.now() < timeout_end:
            return True, timeout_end
        else:
            del USER_TIMEOUTS[user_id]
    return False, None

def set_user_timeout(user_id, minutes=5):
    """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ç–∞–π–º–∞—É—Ç –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    USER_TIMEOUTS[user_id] = datetime.now() + timedelta(minutes=minutes)
    return USER_TIMEOUTS[user_id]

def contains_bad_words(text):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ç–µ–∫—Å—Ç –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –º–∞—Ç–Ω—ã—Ö —Å–ª–æ–≤"""
    if not text:
        return False, None
        
    text_lower = text.lower()
    for word in BAD_WORDS:
        if word in text_lower:
            return True, word
    return False, None

def get_random_task():
    return random.choice(ULTIMATUM_TASKS)

def send_audio_message(chat_id, audio_type):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤–∞—à –∞—É–¥–∏–æ—Ñ–∞–π–ª –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –∫–æ–º–∞–Ω–¥—ã"""
    try:
        audio_file = AUDIO_FILES.get(audio_type)
        if not audio_file:
            logging.error(f"–ê—É–¥–∏–æ—Ñ–∞–π–ª –¥–ª—è —Ç–∏–ø–∞ {audio_type} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö")
            return False
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª
        if not os.path.exists(audio_file):
            logging.error(f"–ê—É–¥–∏–æ—Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {audio_file}")
            return False

         
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞—É–¥–∏–æ –∫–∞–∫ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        with open(audio_file, 'rb') as audio:
            if audio_type == 'puck':
                caption = "üí® –ü—É–∫ –∞—Ç–∞–∫–∞!"
            elif audio_type == 'puck2':
                caption = "üí•üí® –°—É–ø–µ—Ä –ø—É–∫ –∞—Ç–∞–∫–∞!"
            elif audio_type == 'puck3':
                caption = "üå™Ô∏èüí® –≠–ø–∏—á–µ—Å–∫–∏–π –ø—É–∫!"
            else:
                caption = "üîä –ê—É–¥–∏–æ —Å–æ–æ–±—â–µ–Ω–∏–µ"
                
            bot.send_voice(chat_id, audio, caption=caption)
            logging.info(f"–ê—É–¥–∏–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {audio_file}")
            return True
            
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∞—É–¥–∏–æ: {e}")
        return False

def send_protection_video(chat_id):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞—â–∏—Ç–Ω–æ–µ –≤–∏–¥–µ–æ"""
    try:
        video_file = AUDIO_FILES.get('protection')
        if not video_file:
            logging.error("–ó–∞—â–∏—Ç–Ω–æ–µ –≤–∏–¥–µ–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö")
            return False
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª
        if not os.path.exists(video_file):
            logging.error(f"–í–∏–¥–µ–æ—Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {video_file}")
            return False
            
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ
        with open(video_file, 'rb') as video:
            bot.send_video(chat_id, video, caption="üõ°Ô∏è –ó–ê–©–ò–¢–ê –ê–ö–¢–ò–í–ò–†–û–í–ê–ù–ê!")
            logging.info(f"–ó–∞—â–∏—Ç–Ω–æ–µ –≤–∏–¥–µ–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {video_file}")
            return True
            
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤–∏–¥–µ–æ: {e}")
        return False

def text_to_speech(text, lang='ru'):
    """–ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Ç–µ–∫—Å—Ç –≤ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"""
    try:
        with tempfile.NamedTemporaryFile(delete=False, suffix='.mp3') as temp_file:
            temp_filename = temp_file.name
        
        tts = gTTS(text=text, lang=lang, slow=False)
        tts.save(temp_filename)
        return temp_filename
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ TTS: {e}")
        return None

# ========== –ö–ù–û–ü–ö–ò –ú–ï–ù–Æ (REPLY KEYBOARD) ==========

def create_main_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –º–µ–Ω—é"""
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏
    button1 = KeyboardButton('üîî –£–ø–æ–º—è–Ω—É—Ç—å –≤—Å–µ—Ö')
    button2 = KeyboardButton('üéÆ Block Blast')
    button3 = KeyboardButton('üìä –ú–æ–π —Å—Ç–∞—Ç—É—Å')
    button4 = KeyboardButton('üõ°Ô∏è –ê–Ω—Ç–∏-–º–∞—Ç')
    button5 = KeyboardButton('‚ÑπÔ∏è –ü–æ–º–æ—â—å')
    button6 = KeyboardButton('üß™ –¢–µ—Å—Ç –±–æ—Ç–∞')
    
    keyboard.add(button1, button2)
    keyboard.add(button3, button4)
    keyboard.add(button5, button6)
    
    return keyboard

def create_admin_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –∞–¥–º–∏–Ω–æ–≤"""
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    
    # –û—Å–Ω–æ–≤–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
    button1 = KeyboardButton('üîî –£–ø–æ–º—è–Ω—É—Ç—å –≤—Å–µ—Ö')
    button2 = KeyboardButton('üéÆ Block Blast')
    button3 = KeyboardButton('üìä –ú–æ–π —Å—Ç–∞—Ç—É—Å')
    button4 = KeyboardButton('üõ°Ô∏è –ê–Ω—Ç–∏-–º–∞—Ç')
    button5 = KeyboardButton('‚ÑπÔ∏è –ü–æ–º–æ—â—å')
    button6 = KeyboardButton('üß™ –¢–µ—Å—Ç –±–æ—Ç–∞')
    
    # –ê–¥–º–∏–Ω—Å–∫–∏–µ –∫–Ω–æ–ø–∫–∏
    button7 = KeyboardButton('üëë –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞')
    button8 = KeyboardButton('‚ö° –°–Ω—è—Ç—å —Ç–∞–π–º–∞—É—Ç')
    
    keyboard.add(button1, button2)
    keyboard.add(button3, button4)
    keyboard.add(button5, button6)
    keyboard.add(button7, button8)
    
    return keyboard

# ========== –ö–û–ú–ê–ù–î–ê PUCK ==========

@bot.message_handler(commands=['puck'])
def puck_command(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /puck - –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—É–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"""
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É–ø–æ–º—è–Ω—É—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        if len(message.text.split()) < 2:
            bot.reply_to(message, "‚ùå –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /puck @username - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—É–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é", 
                        reply_markup=create_main_keyboard())
            return
        
        target_username = message.text.split()[1]
        
        # –ü–†–û–í–ï–†–ö–ê –ó–ê–©–ò–¢–´ –î–õ–Ø @Madara1332
        if target_username.lower() == PROTECTED_USER.lower():
            protection_text = f"""
üõ°Ô∏è *–ó–ê–©–ò–¢–ê –ê–ö–¢–ò–í–ò–†–û–í–ê–ù–ê!*

–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {PROTECTED_USER} –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ø–æ–¥ –∑–∞—â–∏—Ç–æ–π!
–ü–æ–ø—ã—Ç–∫–∞ –∞—Ç–∞–∫–∏ –æ—Ç @{message.from_user.username or message.from_user.first_name} –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞.

‚ö° *–ó–∞—â–∏—Ç–∞ —Å—Ä–∞–±–æ—Ç–∞–ª–∞!*
            """
            bot.send_message(message.chat.id, protection_text, parse_mode='Markdown', reply_markup=create_main_keyboard())
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞—â–∏—Ç–Ω–æ–µ –≤–∏–¥–µ–æ
            send_protection_video(message.chat.id)
            return
        
        # –°–æ–∑–¥–∞–µ–º –∑–∞–±–∞–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—É–∫–æ–º
        puck_messages = [
            f"üí® *–ü–£–ö!* {target_username} –ø–æ–ª—É—á–∏–ª –ø—É–∫ –æ—Ç @{message.from_user.username or message.from_user.first_name}!",
            f"üí® *–ë–ê-–ë–ê–•!* {target_username} –∞—Ç–∞–∫–æ–≤–∞–Ω –ø—É–∫–æ–º!",
            f"üí® *–ü–£–£–£–£–ö!* –ù–∞ {target_username} —Å–æ–≤–µ—Ä—à–µ–Ω–∞ –≥–∞–∑–æ–≤–∞—è –∞—Ç–∞–∫–∞!",
            f"üí® *–ü–©–©–©!* {target_username} –≤ –∑–∞–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–µ –æ—Ç –≤–Ω–µ–∑–∞–ø–Ω–æ–≥–æ –ø—É–∫–∞!",
            f"üí® *–ë–î–´–©!* –ü—É–∫-—Å–Ω–∞—Ä—è–¥ —Ç–æ—á–Ω–æ –ø–æ—Ä–∞–∑–∏–ª {target_username}!",
            f"üí® *–ü–§–§–§!* {target_username} –ø–æ–ª—É—á–∏–ª –ø–æ—Ä—Ü–∏—é –≤–µ—Å–µ–ª—å—è!",
            f"üí® *–¢–£–£–£–£–ö!* –ê—Ç–∞–∫–∞ –ø—É–∫–æ–º –ø–æ {target_username} —É—Å–ø–µ—à–Ω–∞!",
            f"üí® *–•–õ–û–ü!* {target_username} –æ–≥–ª—É—à–µ–Ω –ø—É–∫–æ–º!"
        ]
        
        response = random.choice(puck_messages)
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Å–ª—É—á–∞–π–Ω—É—é —Ä–µ–∞–∫—Ü–∏—é
        reactions = ["üòÇ", "ü§¢", "üò∑", "üíÄ", "üéØ", "‚ö°", "üéâ", "üçÉ"]
        response += f"\n{random.choice(reactions)} –†–µ–∞–∫—Ü–∏—è: {random.choice(['–°–º–µ—Ö', '–£–¥–∏–≤–ª–µ–Ω–∏–µ', '–ò—Å–ø—É–≥', '–†–∞–¥–æ—Å—Ç—å', '–û—Ç–≤—Ä–∞—â–µ–Ω–∏–µ'])}"
        
        bot.send_message(message.chat.id, response, parse_mode='Markdown', reply_markup=create_main_keyboard())
        
        # –û–¢–ü–†–ê–í–õ–Ø–ï–ú –í–ê–®–ï –ê–£–î–ò–û –î–õ–Ø PUCK
        send_audio_message(message.chat.id, 'puck')
        
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ puck: {e}")
        bot.reply_to(message, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø—É–∫–∞", reply_markup=create_main_keyboard())

@bot.message_handler(commands=['puck2'])
def puck2_command(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /puck2 - —É—Å–∏–ª–µ–Ω–Ω—ã–π –ø—É–∫"""
    try:
        if len(message.text.split()) < 2:
            bot.reply_to(message, "‚ùå –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /puck2 @username - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É—Å–∏–ª–µ–Ω–Ω—ã–π –ø—É–∫", 
                        reply_markup=create_main_keyboard())
            return
        
        target_username = message.text.split()[1]
        
        # –ü–†–û–í–ï–†–ö–ê –ó–ê–©–ò–¢–´ –î–õ–Ø @Madara1332
        if target_username.lower() == PROTECTED_USER.lower():
            protection_text = f"""
üõ°Ô∏è *–ó–ê–©–ò–¢–ê –ê–ö–¢–ò–í–ò–†–û–í–ê–ù–ê!*

–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {PROTECTED_USER} –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ø–æ–¥ –∑–∞—â–∏—Ç–æ–π!
–ü–æ–ø—ã—Ç–∫–∞ —É—Å–∏–ª–µ–Ω–Ω–æ–π –∞—Ç–∞–∫–∏ –æ—Ç @{message.from_user.username or message.from_user.first_name} –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞.

üí• *–ó–∞—â–∏—Ç–∞ —Å—Ä–∞–±–æ—Ç–∞–ª–∞ –ø—Ä–æ—Ç–∏–≤ —Å—É–ø–µ—Ä-–ø—É–∫–∞!*
            """
            bot.send_message(message.chat.id, protection_text, parse_mode='Markdown', reply_markup=create_main_keyboard())
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞—â–∏—Ç–Ω–æ–µ –≤–∏–¥–µ–æ
            send_protection_video(message.chat.id)
            return
        
        puck_messages = [
            f"üí•üí® *–°–£–ü–ï–†-–ü–£–ö!* {target_username} –ø–æ–ª—É—á–∞–µ—Ç –∑–∞–ª–ø –ø—É–∫–æ–≤ –æ—Ç @{message.from_user.username or message.from_user.first_name}!",
            f"üí•üí® *–ë–ê-–ë–ê-–ë–ê–•!* –¢—Ä–æ–π–Ω–æ–π –ø—É–∫ –ø–æ {target_username}!",
            f"üí•üí® *–ü–£–ö-–ê–ü–û–ö–ê–õ–ò–ü–°–ò–°!* {target_username} –≤ —ç–ø–∏—Ü–µ–Ω—Ç—Ä–µ –≥–∞–∑–æ–≤–æ–π –±—É—Ä–∏!",
            f"üí•üí® *–ê–†–¢-–ü–£–ö!* –ó–∞–ª–ø –∏–∑ 5 –ø—É–∫–æ–≤ –Ω–∞–∫—Ä—ã–≤–∞–µ—Ç {target_username}!",
            f"üí•üí® *–ü–£–ö-–¶–ò–ö–õ–û–ù!* {target_username} –Ω–µ –º–æ–∂–µ—Ç —É—Å—Ç–æ—è—Ç—å –ø—Ä–æ—Ç–∏–≤ —Ç–∞–∫–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø—É–∫–æ–≤!"
        ]
        
        response = random.choice(puck_messages)
        response += "\nüí• –≠—Ñ—Ñ–µ–∫—Ç: –£—Å–∏–ª–µ–Ω–Ω—ã–π –ø—É–∫ √ó3"
        response += f"\nüéØ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —É–¥–∞—Ä! {random.choice(['ü§Ø', 'üíÄ', 'üòµ', 'ü•¥', 'ü§Æ'])}"
        
        bot.send_message(message.chat.id, response, parse_mode='Markdown', reply_markup=create_main_keyboard())
        
        # –û–¢–ü–†–ê–í–õ–Ø–ï–ú –í–ê–®–ï –ê–£–î–ò–û –î–õ–Ø PUCK2
        send_audio_message(message.chat.id, 'puck2')
        
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ puck2: {e}")
        bot.reply_to(message, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É—Å–∏–ª–µ–Ω–Ω–æ–≥–æ –ø—É–∫–∞", reply_markup=create_main_keyboard())

@bot.message_handler(commands=['puck3'])
def puck3_command(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /puck3 - —ç–ø–∏—á–µ—Å–∫–∏–π –ø—É–∫"""
    try:
        if len(message.text.split()) < 2:
            bot.reply_to(message, "‚ùå –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /puck3 @username - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —ç–ø–∏—á–µ—Å–∫–∏–π –ø—É–∫", 
                        reply_markup=create_main_keyboard())
            return
        
        target_username = message.text.split()[1]
        
        # –ü–†–û–í–ï–†–ö–ê –ó–ê–©–ò–¢–´ –î–õ–Ø @Madara1332
        if target_username.lower() == PROTECTED_USER.lower():
            protection_text = f"""
üõ°Ô∏è *–ó–ê–©–ò–¢–ê –ê–ö–¢–ò–í–ò–†–û–í–ê–ù–ê!*

–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {PROTECTED_USER} –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ø–æ–¥ –∑–∞—â–∏—Ç–æ–π!
–ü–æ–ø—ã—Ç–∫–∞ —ç–ø–∏—á–µ—Å–∫–æ–π –∞—Ç–∞–∫–∏ –æ—Ç @{message.from_user.username or message.from_user.first_name} –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞.

üå™Ô∏è *–ó–∞—â–∏—Ç–∞ —Å—Ä–∞–±–æ—Ç–∞–ª–∞ –ø—Ä–æ—Ç–∏–≤ —ç–ø–∏—á–µ—Å–∫–æ–≥–æ –ø—É–∫–∞!*
            """
            bot.send_message(message.chat.id, protection_text, parse_mode='Markdown', reply_markup=create_main_keyboard())
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞—â–∏—Ç–Ω–æ–µ –≤–∏–¥–µ–æ
            send_protection_video(message.chat.id)
            return
        
        puck_messages = [
            f"üå™Ô∏èüí® *–≠–ü–ò–ß–ï–°–ö–ò–ô –ü–£–ö!* {target_username} –ø–æ–ª—É—á–∞–µ—Ç –ü–£–ö–û–í–´–ô –ê–ü–û–ö–ê–õ–ò–ü–°–ò–° –æ—Ç @{message.from_user.username or message.from_user.first_name}!",
            f"üå™Ô∏èüí® *–ü–£–ö-–¢–û–†–ù–ê–î–û!* {target_username} —É–Ω–µ—Å–µ–Ω –≤ —Å—Ç—Ä–∞–Ω—É –ø—É–∫–æ–≤!",
            f"üå™Ô∏èüí® *–ì–ê–õ–ê–ö–¢–ò–ß–ï–°–ö–ò–ô –ü–£–ö!* {target_username} –∞—Ç–∞–∫–æ–≤–∞–Ω –ø—É–∫–æ–º –∫–æ—Å–º–∏—á–µ—Å–∫–æ–π —Å–∏–ª—ã!",
            f"üå™Ô∏èüí® *–õ–ï–ì–ï–ù–î–ê–†–ù–´–ô –ü–£–ö!* {target_username} —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è —á–∞—Å—Ç—å—é –ø—É–∫–æ–≤–æ–π –∏—Å—Ç–æ—Ä–∏–∏!",
            f"üå™Ô∏èüí® *–ë–û–ñ–ï–°–¢–í–ï–ù–ù–´–ô –ü–£–ö!* {target_username} –ø–æ–ª—É—á–∞–µ—Ç –±–ª–∞–≥–æ—Å–ª–æ–≤–µ–Ω–∏–µ –±–æ–≥–∞ –ø—É–∫–æ–≤!"
        ]
        
        response = random.choice(puck_messages)
        response += "\nüå™Ô∏è –≠—Ñ—Ñ–µ–∫—Ç: –≠–ø–∏—á–µ—Å–∫–∏–π –ø—É–∫ √ó10"
        response += f"\nüèÜ –î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ: {random.choice(['–õ–µ–≥–µ–Ω–¥–∞ –ø—É–∫–æ–≤', '–ú–∞—Å—Ç–µ—Ä –≥–∞–∑–∞', '–ü—É–∫-–ø–æ–≤–µ–ª–∏—Ç–µ–ª—å', '–ì–∞–∑–æ–≤–∞—è —Ç—É—á–∞'])}"
        response += f"\n{random.choice(['üëë', 'üéñÔ∏è', 'üèÖ', '‚≠ê'])} –£–ù–ò–ö–ê–õ–¨–ù–´–ô –ü–£–ö!"
        
        bot.send_message(message.chat.id, response, parse_mode='Markdown', reply_markup=create_main_keyboard())
        
        # –û–¢–ü–†–ê–í–õ–Ø–ï–ú –í–ê–®–ï –ê–£–î–ò–û –î–õ–Ø PUCK3
        send_audio_message(message.chat.id, 'puck3')
        
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ puck3: {e}")
        bot.reply_to(message, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —ç–ø–∏—á–µ—Å–∫–æ–≥–æ –ø—É–∫–∞", reply_markup=create_main_keyboard())

@bot.message_handler(commands=['alert'])
def alert_command(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /alert - —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–µ –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ"""
    try:
        if not is_admin(message.from_user.id):
            bot.reply_to(message, "‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤!", reply_markup=create_main_keyboard())
            return
        
        alert_text = ' '.join(message.text.split()[1:]) if len(message.text.split()) > 1 else "–í–ù–ò–ú–ê–ù–ò–ï! –í–∞–∂–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ!"
        
        alert_messages = [
            f"üö® *–≠–ö–°–¢–†–ï–ù–ù–û–ï –û–ü–û–í–ï–©–ï–ù–ò–ï!*\n\n{alert_text}",
            f"‚ö†Ô∏è *–í–ê–ñ–ù–û–ï –°–û–û–ë–©–ï–ù–ò–ï!*\n\n{alert_text}",
            f"üì¢ *–°–†–û–ß–ù–û–ï –£–í–ï–î–û–ú–õ–ï–ù–ò–ï!*\n\n{alert_text}",
            f"üîî *–í–ù–ò–ú–ê–ù–ò–ï –í–°–ï–ú!*\n\n{alert_text}"
        ]
        
        response = random.choice(alert_messages)
        response += f"\n\n–û—Ç: @{message.from_user.username or message.from_user.first_name}"
        response += f"\n‚è∞ {datetime.now().strftime('%H:%M:%S')}"
        
        bot.send_message(message.chat.id, response, parse_mode='Markdown', reply_markup=create_admin_keyboard())
        
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ alert: {e}")
        bot.reply_to(message, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ–ø–æ–≤–µ—â–µ–Ω–∏—è", reply_markup=create_main_keyboard())

# ========== –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –ö–ù–û–ü–û–ö –ú–ï–ù–Æ ==========

@bot.message_handler(func=lambda message: message.text == 'üîî –£–ø–æ–º—è–Ω—É—Ç—å –≤—Å–µ—Ö')
def mention_all_button(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–£–ø–æ–º—è–Ω—É—Ç—å –≤—Å–µ—Ö'"""
    if not is_admin(message.from_user.id):
        bot.reply_to(message, "‚ùå –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤!", reply_markup=create_main_keyboard())
        return
    
    try:
        chat_id = message.chat.id
        mention_text = f"""üîî *–í–ù–ò–ú–ê–ù–ò–ï! –°–ª–µ–¥—É—é—â–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ (–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã, –∑–∞—â–∏—â–µ–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏ –∏–∑–≤–µ—Å—Ç–Ω—ã–µ username) –±—ã–ª–∏ —É–ø–æ–º—è–Ω—É—Ç—ã:*

"""
        mention_text += f"üì¢ –û–±—ä—è–≤–ª–µ–Ω–∏–µ –æ—Ç @{message.from_user.username or message.from_user.first_name}\n"
        
        # –î–æ–±–∞–≤–ª—è–µ–º —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ PROTECTED_USER (–µ—Å–ª–∏ –æ–Ω –Ω–µ –≤ –æ–±—â–µ–º —Å–ø–∏—Å–∫–µ)
        if PROTECTED_USER not in KNOWN_USERNAMES:
            mention_text += f"üåü {PROTECTED_USER}\n"
        
        # –î–æ–±–∞–≤–ª—è–µ–º —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∞–¥–º–∏–Ω–æ–≤
        admin_mentions = []
        for admin_id in ADMINS:
            try:
                member = bot.get_chat_member(chat_id, admin_id)
                if member.user.username and f"@{member.user.username}" not in KNOWN_USERNAMES and f"@{member.user.username}" != PROTECTED_USER:
                    admin_mentions.append(f"üëë @{member.user.username}")
            except:
                continue
        
        if admin_mentions:
            mention_text += "\n" + "\n".join(admin_mentions) + "\n"

        # –î–æ–±–∞–≤–ª—è–µ–º —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –≤—Å–µ—Ö –∏–∑ —Å–ø–∏—Å–∫–∞ KNOWN_USERNAMES
        user_mentions = []
        for username_tag in KNOWN_USERNAMES:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –Ω–µ PROTECTED_USER –∏ –Ω–µ –∞–¥–º–∏–Ω, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è
            is_admin_in_list = False
            for admin_id in ADMINS:
                try:
                    member = bot.get_chat_member(chat_id, admin_id)
                    if member.user.username and f"@{member.user.username}" == username_tag:
                        is_admin_in_list = True
                        break
                except:
                    pass
            
            if username_tag != PROTECTED_USER and not is_admin_in_list:
                user_mentions.append(username_tag)
        
        if user_mentions:
            mention_text += "\n" + "\n".join(user_mentions) + "\n"

        mention_text += "\n_–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –ë–æ—Ç –º–æ–∂–µ—Ç —É–ø–æ–º–∏–Ω–∞—Ç—å —Ç–æ–ª—å–∫–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –ø—É–±–ª–∏—á–Ω—ã–º username, –∫–æ—Ç–æ—Ä—ã–µ –≤–∏–¥–Ω—ã –±–æ—Ç—É, –∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ Telegram._\n"
        mention_text += f"\n‚è∞ –í—Ä–µ–º—è: {datetime.now().strftime('%H:%M:%S')}"
        mention_text += f"\n\nüéÆ *–ö–Ω–æ–ø–∫–∞ –Ω–∞–∂–∞—Ç–∞ —á–µ—Ä–µ–∑ –º–µ–Ω—é!*"
        
        bot.send_message(chat_id, mention_text, parse_mode='Markdown', reply_markup=create_main_keyboard())

    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –≤ —É–ø–æ–º–∏–Ω–∞–Ω–∏–∏ –≤—Å–µ—Ö: {e}")
        bot.reply_to(message, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–ø–æ–º–∏–Ω–∞–Ω–∏–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤", reply_markup=create_main_keyboard())

@bot.message_handler(func=lambda message: message.text == 'üéÆ Block Blast')
def block_blast_button(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ 'Block Blast' - –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —á–µ—Ä–µ–∑ —Å—Å—ã–ª–∫—É"""
    try:
        # –°–æ–∑–¥–∞–µ–º Inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π-—Å—Å—ã–ª–∫–æ–π
        markup = telebot.types.InlineKeyboardMarkup()
        game_button = telebot.types.InlineKeyboardButton(
            text="–ù–∞—á–∞—Ç—å Block Blast", 
            url="https://t.me/GreatLeHavre_bot/block_bast"
        )
        markup.add(game_button)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π-—Å—Å—ã–ª–∫–æ–π
        bot.send_message(
            message.chat.id, 
            "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É Block Blast!", 
            reply_markup=markup
        )
        logging.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.username or message.from_user.first_name} –ø–æ–ª—É—á–∏–ª —Å—Å—ã–ª–∫—É –Ω–∞ Block Blast –∏–≥—Ä—É.")
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ Block Blast –∏–≥—Ä—É: {e}")
        bot.reply_to(message, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –æ—Ç–∫—Ä—ã—Ç—å –∏–≥—Ä—É Block Blast.", reply_markup=create_main_keyboard())

@bot.message_handler(func=lambda message: message.text == 'üìä –ú–æ–π —Å—Ç–∞—Ç—É—Å')
def status_button(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–ú–æ–π —Å—Ç–∞—Ç—É—Å' - –î–û–°–¢–£–ü–ï–ù –í–°–ï–ú"""
    try:
        user_id = message.from_user.id
        username = f"@{message.from_user.username}" if message.from_user.username else message.from_user.first_name
        
        # –õ–æ–≥–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        logging.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {username} (ID: {user_id}) –∑–∞–ø—Ä–æ—Å–∏–ª —Å—Ç–∞—Ç—É—Å")
        
        in_timeout, timeout_end = is_user_in_timeout(user_id)
        violations = USER_VIOLATIONS.get(user_id, 0)
        
        if in_timeout:
            time_left = timeout_end - datetime.now()
            minutes_left = int(time_left.total_seconds() // 60)
            seconds_left = int(time_left.total_seconds() % 60)
            timeout_status = f"‚è∞ –î–∞ ({minutes_left} –º–∏–Ω {seconds_left} —Å–µ–∫)"
        else:
            timeout_status = "‚úÖ –ù–µ—Ç"
        
        anti_mat_status = "üü¢ –í–ö–õ–Æ–ß–ï–ù–ê" if ANTI_MAT_ENABLED else "üî¥ –í–´–ö–õ–Æ–ß–ï–ù–ê"
        
        status_text = f"""
üìä *–í–∞—à —Å—Ç–∞—Ç—É—Å:*

üë§ *–ò–º—è:* {username}
üÜî *ID:* {user_id}
üõ°Ô∏è *–ê–¥–º–∏–Ω:* {'‚úÖ –î–∞' if is_admin(user_id) else '‚ùå –ù–µ—Ç'}
üõ°Ô∏è *–ê–Ω—Ç–∏-–º–∞—Ç:* {anti_mat_status}
üîû *–ù–∞—Ä—É—à–µ–Ω–∏–π:* {violations}
‚è∞ *–í —Ç–∞–π–º–∞—É—Ç–µ:* {timeout_status}
‚ö° *–°—Ç–∞—Ç—É—Å:* ‚úÖ –ê–∫—Ç–∏–≤–µ–Ω
üéÆ *–ú–µ–Ω—é:* ‚úÖ –î–æ—Å—Ç—É–ø–Ω–æ
üõ°Ô∏è *–ó–∞—â–∏—Ç–∞:* ‚úÖ –ê–∫—Ç–∏–≤–Ω–∞ –¥–ª—è {PROTECTED_USER}

*–ö–Ω–æ–ø–∫–∞ –Ω–∞–∂–∞—Ç–∞ —á–µ—Ä–µ–∑ –º–µ–Ω—é!*
    """
        
        bot.reply_to(message, status_text, parse_mode='Markdown', reply_markup=create_main_keyboard())
        logging.info(f"–°—Ç–∞—Ç—É—Å —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {username}")
        
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å—Ç–∞—Ç—É—Å–∞: {e}")
        bot.reply_to(message, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞", reply_markup=create_main_keyboard())

@bot.message_handler(func=lambda message: message.text == 'üõ°Ô∏è –ê–Ω—Ç–∏-–º–∞—Ç')
def antimat_button(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–ê–Ω—Ç–∏-–º–∞—Ç'"""
    global ANTI_MAT_ENABLED
    
    if not is_admin(message.from_user.id):
        status = "üü¢ –í–ö–õ–Æ–ß–ï–ù–ê" if ANTI_MAT_ENABLED else "üî¥ –í–´–ö–õ–Æ–ß–ï–ù–ê"
        status_text = f"""
üõ°Ô∏è *–°—Ç–∞—Ç—É—Å –∞–Ω—Ç–∏-–º–∞—Ç–∞:*

{status}

‚ÑπÔ∏è –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –º–æ–≥—É—Ç –∏–∑–º–µ–Ω—è—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.
        """
        bot.reply_to(message, status_text, parse_mode='Markdown', reply_markup=create_main_keyboard())
        return
    
    status = "üü¢ –í–ö–õ–Æ–ß–ï–ù–ê" if ANTI_MAT_ENABLED else "üî¥ –í–´–ö–õ–Æ–ß–ï–ù–ê"
    status_text = f"""
üõ°Ô∏è *–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–Ω—Ç–∏-–º–∞—Ç–æ–º:*

*–¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å:* {status}

*–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã:*
/antimat on - –≤–∫–ª—é—á–∏—Ç—å
/antimat off - –≤—ã–∫–ª—é—á–∏—Ç—å
/antimat status - —Å—Ç–∞—Ç—É—Å

*–ö–Ω–æ–ø–∫–∞ –Ω–∞–∂–∞—Ç–∞ —á–µ—Ä–µ–∑ –º–µ–Ω—é!*
    """
    
    bot.reply_to(message, status_text, parse_mode='Markdown', reply_markup=create_admin_keyboard())

@bot.message_handler(func=lambda message: message.text == '‚ÑπÔ∏è –ü–æ–º–æ—â—å')
def help_button(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–ü–æ–º–æ—â—å' - –î–û–°–¢–£–ü–ï–ù –í–°–ï–ú"""
    anti_mat_status = "üü¢ –í–ö–õ–Æ–ß–ï–ù–ê" if ANTI_MAT_ENABLED else "üî¥ –í–´–ö–õ–Æ–ß–ï–ù–ê"
    
    help_text = f"""
üÜò *–ü–æ–º–æ—â—å –ø–æ –±–æ—Ç—É:*

üõ°Ô∏è *–°–∏—Å—Ç–µ–º–∞ –∞–Ω—Ç–∏-–º–∞—Ç–∞:* {anti_mat_status}
üõ°Ô∏è *–ó–∞—â–∏—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:* {PROTECTED_USER}

*–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–Ω–æ–ø–∫–∏:*
üîî –£–ø–æ–º—è–Ω—É—Ç—å –≤—Å–µ—Ö - –ø–æ–∑–≤–∞—Ç—å –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
üéÆ Block Blast - —Ç–µ—Å—Ç–æ–≤–∞—è –∫–Ω–æ–ø–∫–∞
üìä –ú–æ–π —Å—Ç–∞—Ç—É—Å - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞—Å
üõ°Ô∏è –ê–Ω—Ç–∏-–º–∞—Ç - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º–æ–π
‚ÑπÔ∏è –ü–æ–º–æ—â—å - —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
üß™ –¢–µ—Å—Ç –±–æ—Ç–∞ - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–∞–±–æ—Ç—É

*–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*
/puck @user - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—É–∫ + –∞—É–¥–∏–æ
/puck2 @user - —É—Å–∏–ª–µ–Ω–Ω—ã–π –ø—É–∫ + –∞—É–¥–∏–æ  
/puck3 @user - —ç–ø–∏—á–µ—Å–∫–∏–π –ø—É–∫ + –∞—É–¥–∏–æ
/gg [—Ç–µ–∫—Å—Ç] - –æ–∑–≤—É—á–∏—Ç—å —Ç–µ–∫—Å—Ç
/alert —Ç–µ–∫—Å—Ç - —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–µ –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ (–∞–¥–º–∏–Ω—ã)

*üõ°Ô∏è –ó–∞—â–∏—Ç–∞:* {PROTECTED_USER} –∑–∞—â–∏—â–µ–Ω –æ—Ç –ø—É–∫–æ–≤!

*–ö–Ω–æ–ø–∫–∞ –Ω–∞–∂–∞—Ç–∞ —á–µ—Ä–µ–∑ –º–µ–Ω—é!*
    """
    
    bot.reply_to(message, help_text, parse_mode='Markdown', reply_markup=create_main_keyboard())

@bot.message_handler(func=lambda message: message.text == 'üß™ –¢–µ—Å—Ç –±–æ—Ç–∞')
def test_button(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–¢–µ—Å—Ç –±–æ—Ç–∞' - –î–û–°–¢–£–ü–ï–ù –í–°–ï–ú"""
    anti_mat_status = "üü¢ –í–ö–õ–Æ–ß–ï–ù–ê" if ANTI_MAT_ENABLED else "üî¥ –í–´–ö–õ–Æ–ß–ï–ù–ê"
    
    test_text = f"""
üß™ *–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–æ—Ç–∞:*

‚úÖ *–ú–µ–Ω—é –∫–Ω–æ–ø–æ–∫:* –†–∞–±–æ—Ç–∞–µ—Ç
üõ°Ô∏è *–ê–Ω—Ç–∏-–º–∞—Ç:* {anti_mat_status}
‚ö° *–ë–æ—Ç:* –ê–∫—Ç–∏–≤–µ–Ω
üéÆ *–ö–Ω–æ–ø–∫–∏:* –î–æ—Å—Ç—É–ø–Ω—ã
üí® *Puck –∫–æ–º–∞–Ω–¥—ã:* –î–æ—Å—Ç—É–ø–Ω—ã
üîä *–ê—É–¥–∏–æ —Ñ–∞–π–ª—ã:* –ì–æ—Ç–æ–≤—ã
üõ°Ô∏è *–ó–∞—â–∏—Ç–∞ {PROTECTED_USER}:* –ê–∫—Ç–∏–≤–Ω–∞

*–ö–Ω–æ–ø–∫–∞ –Ω–∞–∂–∞—Ç–∞ —á–µ—Ä–µ–∑ –º–µ–Ω—é!*
    """
    
    bot.reply_to(message, test_text, parse_mode='Markdown', reply_markup=create_main_keyboard())

@bot.message_handler(func=lambda message: message.text == 'üëë –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞')
def stats_button(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞' –¥–ª—è –∞–¥–º–∏–Ω–æ–≤"""
    if not is_admin(message.from_user.id):
        bot.reply_to(message, "‚ùå –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤!", reply_markup=create_main_keyboard())
        return
    
    total_violations = sum(USER_VIOLATIONS.values())
    total_timeouts = len(USER_TIMEOUTS)
    
    stats_text = f"""
üëë *–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∞–¥–º–∏–Ω–∞:*

üîû *–í—Å–µ–≥–æ –Ω–∞—Ä—É—à–µ–Ω–∏–π:* {total_violations}
‚è∞ *–ê–∫—Ç–∏–≤–Ω—ã—Ö —Ç–∞–π–º–∞—É—Ç–æ–≤:* {total_timeouts}
üë• *–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–∞–∑–µ:* {len(USER_VIOLATIONS)}
üõ°Ô∏è *–ê–Ω—Ç–∏-–º–∞—Ç:* {'üü¢ –í–ö–õ' if ANTI_MAT_ENABLED else 'üî¥ –í–´–ö–õ'}
üõ°Ô∏è *–ó–∞—â–∏—Ç–∞:* –ê–∫—Ç–∏–≤–Ω–∞ –¥–ª—è {PROTECTED_USER}

*–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã:*
/violations - –¥–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
/cleartimeout all - —Å–Ω—è—Ç—å –≤—Å–µ —Ç–∞–π–º–∞—É—Ç—ã
/clearviolations all - —Å–Ω—è—Ç—å –≤—Å–µ –Ω–∞—Ä—É—à–µ–Ω–∏—è

*–ö–Ω–æ–ø–∫–∞ –Ω–∞–∂–∞—Ç–∞ —á–µ—Ä–µ–∑ –º–µ–Ω—é!*
    """
    
    bot.reply_to(message, stats_text, parse_mode='Markdown', reply_markup=create_admin_keyboard())

@bot.message_handler(func=lambda message: message.text == '‚ö° –°–Ω—è—Ç—å —Ç–∞–π–º–∞—É—Ç')
def clear_timeout_button(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–°–Ω—è—Ç—å —Ç–∞–π–º–∞—É—Ç' –¥–ª—è –∞–¥–º–∏–Ω–æ–≤"""
    if not is_admin(message.from_user.id):
        bot.reply_to(message, "‚ùå –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤!", reply_markup=create_main_keyboard())
        return
    
    help_text = """
‚ö° *–°–Ω—è—Ç—å —Ç–∞–π–º–∞—É—Ç:*

–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã:
/cleartimeout @username - —Å–Ω—è—Ç—å —Ç–∞–π–º–∞—É—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
/cleartimeout all - —Å–Ω—è—Ç—å –≤—Å–µ —Ç–∞–π–º–∞—É—Ç—ã
/clearviolations @username - —Å–Ω—è—Ç—å –Ω–∞—Ä—É—à–µ–Ω–∏—è
/clearviolations all - —Å–Ω—è—Ç—å –≤—Å–µ –Ω–∞—Ä—É—à–µ–Ω–∏—è

*–ö–Ω–æ–ø–∫–∞ –Ω–∞–∂–∞—Ç–∞ —á–µ—Ä–µ–∑ –º–µ–Ω—é!*
    """
    
    bot.reply_to(message, help_text, parse_mode='Markdown', reply_markup=create_admin_keyboard())

# ========== –ö–û–ú–ê–ù–î–´ –î–õ–Ø –í–°–ï–• ==========

@bot.message_handler(commands=['start'])
def start_command(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start - –î–û–°–¢–£–ü–ï–ù –í–°–ï–ú"""
    anti_mat_status = "üü¢ –í–ö–õ–Æ–ß–ï–ù–ê" if ANTI_MAT_ENABLED else "üî¥ –í–´–ö–õ–Æ–ß–ï–ù–ê"
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–∞–∫—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å
    if is_admin(message.from_user.id):
        keyboard = create_admin_keyboard()
    else:
        keyboard = create_main_keyboard()
    
    welcome_text = f"""
ü§ñ *–ë–æ—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!*

üõ°Ô∏è *–°–∏—Å—Ç–µ–º–∞ –∞–Ω—Ç–∏-–º–∞—Ç–∞:* {anti_mat_status}
üõ°Ô∏è *–ó–∞—â–∏—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:* {PROTECTED_USER}

üéÆ *–î–æ–±–∞–≤–ª–µ–Ω–æ –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–∞–º–∏!*
–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ—É–Ω–∫—Ü–∏—è–º.

*–û—Å–Ω–æ–≤–Ω—ã–µ –∫–Ω–æ–ø–∫–∏:*
üîî –£–ø–æ–º—è–Ω—É—Ç—å –≤—Å–µ—Ö - –ø–æ–∑–≤–∞—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
üéÆ Block Blast - —Ç–µ—Å—Ç–æ–≤–∞—è –∫–Ω–æ–ø–∫–∞  
üìä –ú–æ–π —Å—Ç–∞—Ç—É—Å - –≤–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
üõ°Ô∏è –ê–Ω—Ç–∏-–º–∞—Ç - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º–æ–π
‚ÑπÔ∏è –ü–æ–º–æ—â—å - —Å–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É
üß™ –¢–µ—Å—Ç –±–æ—Ç–∞ - –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã

*–ù–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã:*
üí® /puck @user - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—É–∫ + –≤–∞—à–µ –∞—É–¥–∏–æ
üí• /puck2 @user - —É—Å–∏–ª–µ–Ω–Ω—ã–π –ø—É–∫ + –≤–∞—à–µ –∞—É–¥–∏–æ
üå™Ô∏è /puck3 @user - —ç–ø–∏—á–µ—Å–∫–∏–π –ø—É–∫ + –≤–∞—à–µ –∞—É–¥–∏–æ
üîä /gg [—Ç–µ–∫—Å—Ç] - –æ–∑–≤—É—á–∏—Ç—å —Ç–µ–∫—Å—Ç
üö® /alert —Ç–µ–∫—Å—Ç - –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ (–∞–¥–º–∏–Ω—ã)

*üõ°Ô∏è –ó–ê–©–ò–¢–ê:* {PROTECTED_USER} –∑–∞—â–∏—â–µ–Ω –æ—Ç –≤—Å–µ—Ö –≤–∏–¥–æ–≤ –ø—É–∫–æ–≤!

*–ë–æ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω!* üöÄ
    """
    
    bot.reply_to(message, welcome_text, parse_mode='Markdown', reply_markup=keyboard)

@bot.message_handler(commands=['help'])
def help_command(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help - –î–û–°–¢–£–ü–ï–ù –í–°–ï–ú"""
    anti_mat_status = "üü¢ –í–ö–õ–Æ–ß–ï–ù–ê" if ANTI_MAT_ENABLED else "üî¥ –í–´–ö–õ–Æ–ß–ï–ù–ê"
    
    help_text = f"""
üÜò *–ü–æ–º–æ—â—å –ø–æ –∫–æ–º–∞–Ω–¥–∞–º:*

üõ°Ô∏è *–°–∏—Å—Ç–µ–º–∞ –∞–Ω—Ç–∏-–º–∞—Ç–∞:* {anti_mat_status}
üõ°Ô∏è *–ó–∞—â–∏—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:* {PROTECTED_USER}

*–¢–µ–ø–µ—Ä—å –¥–æ—Å—Ç—É–ø–Ω–æ –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–∞–º–∏!*
–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ—É–Ω–∫—Ü–∏—è–º.

*–¢–∞–∫–∂–µ –¥–æ—Å—Ç—É–ø–Ω—ã –∫–æ–º–∞–Ω–¥—ã:*
/start - –ø–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é
/status - –≤–∞—à —Å—Ç–∞—Ç—É—Å
/mytimeout - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–∞–π–º–∞—É—Ç
/gg [—Ç–µ–∫—Å—Ç] - –æ–∑–≤—É—á–∏—Ç—å —Ç–µ–∫—Å—Ç
/puck @user - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—É–∫ + –≤–∞—à–µ –∞—É–¥–∏–æ
/puck2 @user - —É—Å–∏–ª–µ–Ω–Ω—ã–π –ø—É–∫ + –≤–∞—à–µ –∞—É–¥–∏–æ
/puck3 @user - —ç–ø–∏—á–µ—Å–∫–∏–π –ø—É–∫ + –≤–∞—à–µ –∞—É–¥–∏–æ
/alert —Ç–µ–∫—Å—Ç - –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ (–∞–¥–º–∏–Ω—ã)

*üõ°Ô∏è –í–ê–ñ–ù–û:* {PROTECTED_USER} –∑–∞—â–∏—â–µ–Ω –æ—Ç –≤—Å–µ—Ö –∞—Ç–∞–∫!
    """
    
    bot.reply_to(message, help_text, parse_mode='Markdown', reply_markup=create_main_keyboard())

# ========== –ö–û–ú–ê–ù–î–´ –ê–ù–¢–ò-–ú–ê–¢–ê ==========

@bot.message_handler(commands=['antimat'])
def antimat_command(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /antimat"""
    global ANTI_MAT_ENABLED
    
    if not is_admin(message.from_user.id):
        bot.reply_to(message, "‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤!", reply_markup=create_main_keyboard())
        return
    
    if len(message.text.split()) < 2:
        status = "üü¢ –í–ö–õ–Æ–ß–ï–ù–ê" if ANTI_MAT_ENABLED else "üî¥ –í–´–ö–õ–Æ–ß–ï–ù–ê"
        bot.reply_to(message, f"üõ°Ô∏è –°—Ç–∞—Ç—É—Å –∞–Ω—Ç–∏-–º–∞—Ç–∞: {status}", reply_markup=create_admin_keyboard())
        return
    
    subcommand = message.text.split()[1].lower()
    
    if subcommand == 'on':
        ANTI_MAT_ENABLED = True
        bot.reply_to(message, "‚úÖ –°–∏—Å—Ç–µ–º–∞ –∞–Ω—Ç–∏-–º–∞—Ç–∞ –í–ö–õ–Æ–ß–ï–ù–ê", reply_markup=create_admin_keyboard())
    elif subcommand == 'off':
        ANTI_MAT_ENABLED = False
        bot.reply_to(message, "‚ùå –°–∏—Å—Ç–µ–º–∞ –∞–Ω—Ç–∏-–º–∞—Ç–∞ –í–´–ö–õ–Æ–ß–ï–ù–ê", reply_markup=create_admin_keyboard())
    elif subcommand == 'status':
        status = "üü¢ –í–ö–õ–Æ–ß–ï–ù–ê" if ANTI_MAT_ENABLED else "üî¥ –í–´–ö–õ–Æ–ß–ï–ù–ê"
        bot.reply_to(message, f"üõ°Ô∏è –°—Ç–∞—Ç—É—Å –∞–Ω—Ç–∏-–º–∞—Ç–∞: {status}", reply_markup=create_admin_keyboard())
    else:
        bot.reply_to(message, "‚ùå –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /antimat [on|off|status]", reply_markup=create_admin_keyboard())

@bot.message_handler(commands=['test'])
def test_command(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /test - –î–û–°–¢–£–ü–ï–ù –í–°–ï–ú"""
    test_text = f"""
üß™ *–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–æ—Ç–∞:*

‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ
üéÆ –ö–Ω–æ–ø–∫–∏ –º–µ–Ω—é –¥–æ—Å—Ç—É–ø–Ω—ã
üõ°Ô∏è –°–∏—Å—Ç–µ–º–∞ –∞–Ω—Ç–∏-–º–∞—Ç–∞ –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞
üí® –ö–æ–º–∞–Ω–¥—ã puck –≥–æ—Ç–æ–≤—ã
üîä –ê—É–¥–∏–æ —Ñ–∞–π–ª—ã –ø–æ–¥–∫–ª—é—á–µ–Ω—ã
üõ°Ô∏è –ó–∞—â–∏—Ç–∞ {PROTECTED_USER} –∞–∫—Ç–∏–≤–Ω–∞
‚ö° –í—Å–µ —Å–∏—Å—Ç–µ–º—ã –≤ –Ω–æ—Ä–º–µ

*–ë–æ—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–µ–Ω!* üöÄ
    """
    bot.reply_to(message, test_text, parse_mode='Markdown', reply_markup=create_main_keyboard())

@bot.message_handler(commands=['status'])
def status_command(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /status - –î–û–°–¢–£–ü–ï–ù –í–°–ï–ú"""
    try:
        user_id = message.from_user.id
        username = f"@{message.from_user.username}" if message.from_user.username else message.from_user.first_name
        
        in_timeout, timeout_end = is_user_in_timeout(user_id)
        violations = USER_VIOLATIONS.get(user_id, 0)
        
        if in_timeout:
            time_left = timeout_end - datetime.now()
            minutes_left = int(time_left.total_seconds() // 60)
            seconds_left = int(time_left.total_seconds() % 60)
            timeout_status = f"‚è∞ –î–∞ ({minutes_left} –º–∏–Ω {seconds_left} —Å–µ–∫)"
        else:
            timeout_status = "‚úÖ –ù–µ—Ç"
        
        anti_mat_status = "üü¢ –í–ö–õ–Æ–ß–ï–ù–ê" if ANTI_MAT_ENABLED else "üî¥ –í–´–ö–õ–Æ–ß–ï–ù–ê"
        
        status_text = f"""
üìä *–í–∞—à —Å—Ç–∞—Ç—É—Å:*

üë§ *–ò–º—è:* {username}
üÜî *ID:* {user_id}
üõ°Ô∏è *–ê–¥–º–∏–Ω:* {'‚úÖ –î–∞' if is_admin(user_id) else '‚ùå –ù–µ—Ç'}
üõ°Ô∏è *–ê–Ω—Ç–∏-–º–∞—Ç:* {anti_mat_status}
üîû *–ù–∞—Ä—É—à–µ–Ω–∏–π:* {violations}
‚è∞ *–í —Ç–∞–π–º–∞—É—Ç–µ:* {timeout_status}
‚ö° *–°—Ç–∞—Ç—É—Å:* ‚úÖ –ê–∫—Ç–∏–≤–µ–Ω
üéÆ *–ú–µ–Ω—é:* ‚úÖ –î–æ—Å—Ç—É–ø–Ω–æ
üí® *Puck –∫–æ–º–∞–Ω–¥—ã:* ‚úÖ –î–æ—Å—Ç—É–ø–Ω—ã
üîä *–ê—É–¥–∏–æ —Ñ–∞–π–ª—ã:* ‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω—ã
üõ°Ô∏è *–ó–∞—â–∏—Ç–∞:* ‚úÖ –ê–∫—Ç–∏–≤–Ω–∞ –¥–ª—è {PROTECTED_USER}
    """
        
        bot.reply_to(message, status_text, parse_mode='Markdown', reply_markup=create_main_keyboard())
        
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ status: {e}")
        bot.reply_to(message, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞", reply_markup=create_main_keyboard())

@bot.message_handler(commands=['mytimeout'])
def mytimeout_command(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /mytimeout - –î–û–°–¢–£–ü–ï–ù –í–°–ï–ú"""
    user_id = message.from_user.id
    username = f"@{message.from_user.username}" if message.from_user.username else message.from_user.first_name
    
    in_timeout, timeout_end = is_user_in_timeout(user_id)
    
    if in_timeout:
        time_left = timeout_end - datetime.now()
        minutes_left = int(time_left.total_seconds() // 60)
        seconds_left = int(time_left.total_seconds() % 60)
        
        timeout_text = f"""
‚è∞ *–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–∞–π–º–∞—É—Ç–µ:*

üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {username}
üÜî ID: {user_id}
üö´ –°—Ç–∞—Ç—É—Å: –í —Ç–∞–π–º–∞—É—Ç–µ
‚è≥ –û—Å—Ç–∞–ª–æ—Å—å: {minutes_left} –º–∏–Ω—É—Ç {seconds_left} —Å–µ–∫—É–Ω–¥
üïí –ó–∞–≤–µ—Ä—à–∏—Ç—Å—è: {timeout_end.strftime('%H:%M:%S')}

‚ÑπÔ∏è –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –¥–ª—è —Å–Ω—è—Ç–∏—è —Ç–∞–π–º–∞—É—Ç–∞.
        """
    else:
        timeout_text = f"""
‚úÖ *–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–∞–π–º–∞—É—Ç–µ:*

üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {username}
üÜî ID: {user_id}
‚úÖ –°—Ç–∞—Ç—É—Å: –¢–∞–π–º–∞—É—Ç–æ–≤ –Ω–µ—Ç
üéâ –í—ã –º–æ–∂–µ—Ç–µ —Å–≤–æ–±–æ–¥–Ω–æ –ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è!

üí° –°–æ–±–ª—é–¥–∞–π—Ç–µ –ø—Ä–∞–≤–∏–ª–∞ —á–∞—Ç–∞.
        """
    
    bot.reply_to(message, timeout_text, parse_mode='Markdown', reply_markup=create_main_keyboard())

@bot.message_handler(commands=['violations'])
def violations_command(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /violations"""
    if not is_admin(message.from_user.id):
        bot.reply_to(message, "‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤!", reply_markup=create_main_keyboard())
        return
    
    if not USER_VIOLATIONS:
        bot.reply_to(message, "üìä –ù–∞—Ä—É—à–µ–Ω–∏–π –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ", reply_markup=create_admin_keyboard())
        return
    
    violations_text = "üìä *–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–π:*\n\n"
    
    for user_id, count in sorted(USER_VIOLATIONS.items(), key=lambda x: x[1], reverse=True):
        try:
            user = bot.get_chat(user_id)
            username = f"@{user.username}" if user.username else user.first_name
            violations_text += f"üë§ {username}: {count} –Ω–∞—Ä—É—à–µ–Ω–∏–π\n"
        except:
            violations_text += f"üë§ ID {user_id}: {count} –Ω–∞—Ä—É—à–µ–Ω–∏–π\n"
    
    violations_text += f"\nüîû –í—Å–µ–≥–æ –Ω–∞—Ä—É—à–µ–Ω–∏–π: {sum(USER_VIOLATIONS.values())}"
    violations_text += f"\nüë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –Ω–∞—Ä—É—à–µ–Ω–∏—è–º–∏: {len(USER_VIOLATIONS)}"
    
    bot.reply_to(message, violations_text, parse_mode='Markdown', reply_markup=create_admin_keyboard())

@bot.message_handler(commands=['cleartimeout'])
def clear_timeout_command(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /cleartimeout"""
    if not is_admin(message.from_user.id):
        bot.reply_to(message, "‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤!", reply_markup=create_main_keyboard())
        return
    
    if len(message.text.split()) < 2:
        bot.reply_to(message, "‚ùå –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /cleartimeout @username –∏–ª–∏ /cleartimeout all", reply_markup=create_admin_keyboard())
        return
    
    target = message.text.split()[1]
    
    if target.lower() == 'all':
        cleared_count = len(USER_TIMEOUTS)
        USER_TIMEOUTS.clear()
        bot.reply_to(message, f"‚úÖ –°–Ω—è—Ç—ã –≤—Å–µ —Ç–∞–π–º–∞—É—Ç—ã ({cleared_count} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π)", reply_markup=create_admin_keyboard())
        return
    
    # –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ username
    cleared = False
    for user_id in list(USER_TIMEOUTS.keys()):
        try:
            user = bot.get_chat(user_id)
            if user.username and f"@{user.username}".lower() == target.lower():
                del USER_TIMEOUTS[user_id]
                cleared = True
                break
        except:
            continue
    
    if cleared:
        bot.reply_to(message, f"‚úÖ –¢–∞–π–º–∞—É—Ç —Å–Ω—è—Ç –¥–ª—è {target}", reply_markup=create_admin_keyboard())
    else:
        bot.reply_to(message, f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {target} –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ –≤ —Ç–∞–π–º–∞—É—Ç–µ", reply_markup=create_admin_keyboard())

@bot.message_handler(commands=['clearviolations'])
def clear_violations_command(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /clearviolations"""
    if not is_admin(message.from_user.id):
        bot.reply_to(message, "‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤!", reply_markup=create_main_keyboard())
        return
    
    if len(message.text.split()) < 2:
        bot.reply_to(message, "‚ùå –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /clearviolations @username –∏–ª–∏ /clearviolations all", reply_markup=create_admin_keyboard())
        return
    
    target = message.text.split()[1]
    
    if target.lower() == 'all':
        cleared_count = len(USER_VIOLATIONS)
        USER_VIOLATIONS.clear()
        bot.reply_to(message, f"‚úÖ –°–Ω—è—Ç—ã –≤—Å–µ –Ω–∞—Ä—É—à–µ–Ω–∏—è ({cleared_count} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π)", reply_markup=create_admin_keyboard())
        return
    
    # –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ username
    cleared = False
    for user_id in list(USER_VIOLATIONS.keys()):
        try:
            user = bot.get_chat(user_id)
            if user.username and f"@{user.username}".lower() == target.lower():
                del USER_VIOLATIONS[user_id]
                cleared = True
                break
        except:
            continue
    
    if cleared:
        bot.reply_to(message, f"‚úÖ –ù–∞—Ä—É—à–µ–Ω–∏—è —Å–Ω—è—Ç—ã –¥–ª—è {target}", reply_markup=create_admin_keyboard())
    else:
        bot.reply_to(message, f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {target} –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–∞—Ä—É—à–µ–Ω–∏–π –Ω–µ—Ç", reply_markup=create_admin_keyboard())

@bot.message_handler(commands=['gg'])
def gg_command(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /gg - –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –≤ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ - –î–û–°–¢–£–ü–ï–ù –í–°–ï–ú"""
    try:
        text_to_speak = ' '.join(message.text.split()[1:])
        
        if not text_to_speak:
            bot.reply_to(message, "‚ùå –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /gg [—Ç–µ–∫—Å—Ç –¥–ª—è –æ–∑–≤—É—á–∫–∏]", reply_markup=create_main_keyboard())
            return
        
        if len(text_to_speak) > 200:
            bot.reply_to(message, "‚ùå –¢–µ–∫—Å—Ç —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π (–º–∞–∫—Å–∏–º—É–º 200 —Å–∏–º–≤–æ–ª–æ–≤)", reply_markup=create_main_keyboard())
            return
        
        bot.reply_to(message, "üîä –ü—Ä–µ–æ–±—Ä–∞–∑—É—é —Ç–µ–∫—Å—Ç –≤ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ...", reply_markup=create_main_keyboard())
        
        audio_file = text_to_speech(text_to_speak)
        
        if audio_file:
            with open(audio_file, 'rb') as audio:
                bot.send_voice(message.chat.id, audio, caption=f"üîä –û–∑–≤—É—á–∫–∞: {text_to_speak}")
            
            # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
            os.unlink(audio_file)
        else:
            bot.reply_to(message, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è", reply_markup=create_main_keyboard())
            
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ gg: {e}")
        bot.reply_to(message, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã", reply_markup=create_main_keyboard())

# ========== –û–ë–†–ê–ë–û–¢–ö–ê –ú–ê–¢–û–í (–° –ü–†–û–í–ï–†–ö–û–ô –ù–ê –í–ö–õ–Æ–ß–ï–ù–ò–ï) ==========

@bot.message_handler(func=lambda message: True, content_types=['text'])
def handle_all_messages(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    try:
        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∫–æ–º–∞–Ω–¥—ã –∏ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é
        if message.text.startswith('/') or message.text in [
            'üîî –£–ø–æ–º—è–Ω—É—Ç—å –≤—Å–µ—Ö', 'üéÆ Block Blast', 'üìä –ú–æ–π —Å—Ç–∞—Ç—É—Å', 
            'üõ°Ô∏è –ê–Ω—Ç–∏-–º–∞—Ç', '‚ÑπÔ∏è –ü–æ–º–æ—â—å', 'üß™ –¢–µ—Å—Ç –±–æ—Ç–∞',
            'üëë –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', '‚ö° –°–Ω—è—Ç—å —Ç–∞–π–º–∞—É—Ç'
        ]:
            return
        
        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∞–¥–º–∏–Ω–æ–≤
        if is_admin(message.from_user.id):
            return
        
        user_id = message.from_user.id
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–π–º–∞—É—Ç (—Ä–∞–±–æ—Ç–∞–µ—Ç –¥–∞–∂–µ –ø—Ä–∏ –≤—ã–∫–ª—é—á–µ–Ω–Ω–æ–º –∞–Ω—Ç–∏-–º–∞—Ç–µ)
        in_timeout, timeout_end = is_user_in_timeout(user_id)
        if in_timeout:
            time_left = timeout_end - datetime.now()
            minutes_left = int(time_left.total_seconds() // 60)
            seconds_left = int(time_left.total_seconds() % 60)
            
            try:
                bot.delete_message(message.chat.id, message.message_id)
                if minutes_left > 0 or seconds_left > 30:
                    bot.send_message(
                        message.chat.id, 
                        f"‚è∞ –í—ã –≤ —Ç–∞–π–º–∞—É—Ç–µ! –û—Å—Ç–∞–ª–æ—Å—å: {minutes_left} –º–∏–Ω {seconds_left} —Å–µ–∫\n"
                        f"–ñ–¥–∏—Ç–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ç–∞–π–º–∞—É—Ç–∞ —á—Ç–æ–±—ã –ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è.",
                        reply_markup=create_main_keyboard()
                    )
            except:
                pass
            return
        
        # –ü–†–û–í–ï–†–Ø–ï–ú –í–ö–õ–Æ–ß–ï–ù–ê –õ–ò –°–ò–°–¢–ï–ú–ê –ê–ù–¢–ò-–ú–ê–¢–ê
        if not ANTI_MAT_ENABLED:
            return  # –ï—Å–ª–∏ —Å–∏—Å—Ç–µ–º–∞ –≤—ã–∫–ª—é—á–µ–Ω–∞ - –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –º–∞—Ç–æ–≤
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –º–∞—Ç—ã (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Å–∏—Å—Ç–µ–º–∞ –≤–∫–ª—é—á–µ–Ω–∞)
        has_bad_word, bad_word = contains_bad_words(message.text)
        
        if has_bad_word:
            logging.info(f"–û–±–Ω–∞—Ä—É–∂–µ–Ω –º–∞—Ç: '{bad_word}' –æ—Ç {user_id}")
            
            username = f"@{message.from_user.username}" if message.from_user.username else message.from_user.first_name
            
            # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            try:
                bot.delete_message(message.chat.id, message.message_id)
            except Exception as e:
                logging.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ: {e}")
            
            # –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞—Ä—É—à–µ–Ω–∏–µ
            if user_id not in USER_VIOLATIONS:
                USER_VIOLATIONS[user_id] = 0
            USER_VIOLATIONS[user_id] += 1
            
            violations_count = USER_VIOLATIONS[user_id]
            
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∞–π–º–∞—É—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–π
            if violations_count == 1:
                timeout_minutes = 3
            elif violations_count == 2:
                timeout_minutes = 5
            elif violations_count == 3:
                timeout_minutes = 10
            else:
                timeout_minutes = 15
            
            timeout_end = set_user_timeout(user_id, timeout_minutes)
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–ª—å—Ç–∏–º–∞—Ç—É–º
            task = get_random_task()
            ultimatum_text = f"""
üö® –£–õ–¨–¢–ò–ú–ê–¢–£–ú –¥–ª—è {username}!

üîû –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω–æ–µ —Å–ª–æ–≤–æ: **{bad_word}**
üìä –ù–∞—Ä—É—à–µ–Ω–∏–π: {violations_count}
‚è∞ –¢–∞–π–º–∞—É—Ç: {timeout_minutes} –º–∏–Ω—É—Ç

üìã **–í–∞—à–µ –∑–∞–¥–∞–Ω–∏–µ:**
{task}

‚è∞ –í—ã–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–¥–∞–Ω–∏–µ –¥–æ –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ç–∞–π–º–∞—É—Ç–∞!

üí° –ê–¥–º–∏–Ω –º–æ–∂–µ—Ç —Å–Ω—è—Ç—å —Ç–∞–π–º–∞—É—Ç: /cleartimeout {username}
            """
            
            bot.send_message(message.chat.id, ultimatum_text, parse_mode='Markdown', reply_markup=create_main_keyboard())
            
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –≤ handle_all_messages: {e}")

# ========== API –î–õ–Ø –ò–ì–†–´ (Flask) ==========

@app.route('/new_high_score', methods=['POST'])
def new_high_score():
    try:
        data = request.json
        username = data.get('username', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∏–≥—Ä–æ–∫')
        role = data.get('role', '–ù–µ –≤—ã–±—Ä–∞–Ω–∞')
        score = data.get('score', 0)

        message_text = f"""
        üéâ *–ù–û–í–´–ô –†–ï–ö–û–†–î –í BLOCK BLAST!* üéâ

        üë§ –ò–≥—Ä–æ–∫: @{username}
        üåü –†–æ–ª—å: {role.capitalize()}
        üíØ –û—á–∫–∏: {score}

        –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Å –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω—ã–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ–º!
        """
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —É–∫–∞–∑–∞–Ω–Ω—ã–π —á–∞—Ç
        bot.send_message(ANNOUNCEMENT_CHAT_ID, message_text, parse_mode='Markdown')
        logging.info(f"–ù–æ–≤—ã–π —Ä–µ–∫–æ—Ä–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ —á–∞—Ç: {username} - {score} –æ—á–∫–æ–≤")
        return jsonify({'status': 'success'}), 200
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –Ω–æ–≤–æ–≥–æ —Ä–µ–∫–æ—Ä–¥–∞: {e}")
        return jsonify({'status': 'error', 'message': str(e)}), 500

def run_flask_app():
    port = int(os.environ.get('PORT', 5000))
    app.run(host='0.0.0.0', port=port, debug=False)

# ========== –ó–ê–ü–£–°–ö –ë–û–¢–ê ==========

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞"""
    global ANTI_MAT_ENABLED
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    flask_thread = threading.Thread(target=run_flask_app)
    flask_thread.daemon = True # –ü–æ—Ç–æ–∫ –∑–∞–≤–µ—Ä—à–∏—Ç—Å—è –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –æ—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã
    flask_thread.start()
    logging.info("Flask —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ –Ω–∞ http://0.0.0.0:5000")

    anti_mat_status = "üü¢ –í–ö–õ–Æ–ß–ï–ù–ê" if ANTI_MAT_ENABLED else "üî¥ –í–´–ö–õ–Æ–ß–ï–ù–ê"
    
    print("=" * 60)
    print("ü§ñ –ë–û–¢ –ó–ê–ü–£–°–ö–ê–ï–¢–°–Ø...")
    print("=" * 60)
    print(f"üëë –ê–¥–º–∏–Ω—ã: {len(ADMINS)}")
    print(f"üõ°Ô∏è –ê–Ω—Ç–∏-–º–∞—Ç: {anti_mat_status}")
    print(f"üîû –ú–∞—Ç–Ω—ã—Ö —Å–ª–æ–≤: {len(BAD_WORDS)}")
    print(f"üìã –ó–∞–¥–∞–Ω–∏–π: {len(ULTIMATUM_TASKS)}")
    print(f"üí® Puck –∫–æ–º–∞–Ω–¥: 3 –¥–æ–±–∞–≤–ª–µ–Ω–æ + –í–ê–®–ò –ê–£–î–ò–û–§–ê–ô–õ–´")
    print(f"üõ°Ô∏è –ó–∞—â–∏—Ç–∞: –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞ –¥–ª—è {PROTECTED_USER}")
    print("=" * 60)
    print("üîä –ù–ê–°–¢–†–û–ô–ö–ò –ê–£–î–ò–û–§–ê–ô–õ–û–í:")
    for cmd, audio_file in AUDIO_FILES.items():
        exists = "‚úÖ –ï–°–¢–¨" if os.path.exists(audio_file) else "‚ùå –ù–ï–¢"
        print(f"   {cmd}: {audio_file} {exists}")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—É–¥–∏–æ—Ñ–∞–π–ª—ã
    missing_files = []
    for cmd, audio_file in AUDIO_FILES.items():
        if not os.path.exists(audio_file):
            missing_files.append(audio_file)
    
    if missing_files:
        print("‚ùå –í–ù–ò–ú–ê–ù–ò–ï! –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ñ–∞–π–ª—ã:")
        for file in missing_files:
            print(f"   - {file}")
        print("üìç –†–∞–∑–º–µ—Å—Ç–∏—Ç–µ —Ñ–∞–π–ª—ã –≤ –ø–∞–ø–∫–µ —Å –±–æ—Ç–æ–º –∏–ª–∏ —É–∫–∞–∂–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø—É—Ç–∏ –≤ AUDIO_FILES")
        print("=" * 60)
    else:
        print("‚úÖ –í—Å–µ —Ñ–∞–π–ª—ã –Ω–∞–π–¥–µ–Ω—ã!")
        print("=" * 60)
    
    try:
        bot_info = bot.get_me()
        print(f"‚úÖ –ë–æ—Ç @{bot_info.username} —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω!")
        print("üéÆ –ú–µ–Ω—é —Å –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ!")
        print("üí® –ö–æ–º–∞–Ω–¥—ã puck —Å –≤–∞—à–∏–º–∏ –∞—É–¥–∏–æ—Ñ–∞–π–ª–∞–º–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã!")
        print(f"üõ°Ô∏è –ó–∞—â–∏—Ç–∞ –¥–ª—è {PROTECTED_USER} –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞!")
        print("üîä –ö–æ–º–∞–Ω–¥–∞ /gg –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")
        print("üìä –°—Ç–∞—Ç—É—Å –¥–æ—Å—Ç—É–ø–µ–Ω –í–°–ï–ú –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º!")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return
    
    while True:
        try:
            print("üîÑ –ó–∞–ø—É—Å–∫ polling...")
            bot.polling(none_stop=True, interval=1, timeout=30)
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ polling: {e}")
            print("üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥...")
            time.sleep(10)

if __name__ == "__main__":
    main()